user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream api {
        server server:8080;
    }

    upstream frontend {
        server frontend:8081;
    }

    server {
        listen 80;
        server_name localhost;
        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
        root /var/www;

        location ~* ^/(api|healthz) {
            # $http vs $http_host
            # ref: https://serverfault.com/questions/706438/what-is-the-difference-between-nginx-variables-host-http-host-and-server-na
            # this is currently set to $http_host because in development, i am running on a non-standard port (8000) and $http doesn't
            # include the port.  this causes rest framework to generate urls in HyperlinkedModelSerializers without the port, thus breaking
            # the api.
            proxy_set_header Host                    $http_host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Forwarded-For         $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto       $http_x_forwarded_proto;
            proxy_set_header X-Forwarded-Port        $http_x_forwarded_port;
            proxy_redirect   off;
            proxy_pass       http://api;
        }

        location / {
            proxy_set_header Host                    $http_host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Forwarded-For         $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto       $http_x_forwarded_proto;
            proxy_set_header X-Forwarded-Port        $http_x_forwarded_port;
            proxy_redirect   off;
            proxy_pass http://frontend;
        }

        location /sockjs-node/ {
            proxy_set_header Host                    $http_host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Forwarded-For         $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto       $http_x_forwarded_proto;
            proxy_set_header X-Forwarded-Port        $http_x_forwarded_port;
            proxy_redirect   off;
            proxy_pass http://frontend;

            proxy_http_version 1.1;
            proxy_set_header Upgrade    $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
