version: '3.2'

services:

  nginx:
    image: nginx:latest
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8000:80
    depends_on:
      - server

  server:
    image: memcache-server:latest
    command: watchmedo auto-restart -d . -p "*.py" -DR -- python main.py
    environment:
      - KV_DATABASE=/opt/app/database.sqlite
    volumes:
      - .:/opt/app
    ports:
      - 11211:11211
      - 8080:8080

  frontend:
    image: memcache-frontend:latest
    command: npm run serve
    environment:
      HOST: 0.0.0.0
      PORT: 8081
    volumes:
      - ./frontend:/src
    ports:
      - 8081:8081

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9000:8080

  node-exporter:
    image: prom/node-exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana/provisioning:/etc/grafana/provisioning/
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  fluentd:
    build: ./infra/fluentd
    ports:
      - "24224:24224"
    volumes:
      - ./infra/fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - ./logs:/opt/logs

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.3
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata1:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.3
    ports:
      - "5601:5601"
    depends_on:
      - fluentd
      - elasticsearch

volumes:
  grafana_data:
  prometheus_data:
  esdata1:
